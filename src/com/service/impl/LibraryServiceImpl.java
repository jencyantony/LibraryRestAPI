
package com.service.impl;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.service.bo.LoginInfoBO;
import com.service.bo.UserInfoBO;
import com.service.bo.UserRegistrationInfoBO;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LibraryServiceImpl", targetNamespace = "http://impl.service.com")
@XmlSeeAlso({
    com.service.bo.ObjectFactory.class,
    com.service.dao.ObjectFactory.class,
    com.service.exception.ObjectFactory.class,
    com.service.impl.ObjectFactory.class
})
public interface LibraryServiceImpl {


    /**
     * 
     * @param user
     * @return
     *     returns java.lang.String
     * @throws LibraryServiceException
     */
    @WebMethod
    @WebResult(name = "registerUserReturn", targetNamespace = "http://impl.service.com")
    @RequestWrapper(localName = "registerUser", targetNamespace = "http://impl.service.com", className = "com.service.impl.RegisterUser")
    @ResponseWrapper(localName = "registerUserResponse", targetNamespace = "http://impl.service.com", className = "com.service.impl.RegisterUserResponse")
    public String registerUser(
        @WebParam(name = "user", targetNamespace = "http://impl.service.com")
        UserRegistrationInfoBO user)
        throws LibraryServiceException
    ;

    /**
     * 
     * @param loginInfo
     * @return
     *     returns boolean
     * @throws LibraryServiceException
     */
    @WebMethod
    @WebResult(name = "isValidUserReturn", targetNamespace = "http://impl.service.com")
    @RequestWrapper(localName = "isValidUser", targetNamespace = "http://impl.service.com", className = "com.service.impl.IsValidUser")
    @ResponseWrapper(localName = "isValidUserResponse", targetNamespace = "http://impl.service.com", className = "com.service.impl.IsValidUserResponse")
    public boolean isValidUser(
        @WebParam(name = "loginInfo", targetNamespace = "http://impl.service.com")
        LoginInfoBO loginInfo)
        throws LibraryServiceException
    ;

    /**
     * 
     * @param userId
     * @return
     *     returns com.service.bo.UserInfoBO
     * @throws LibraryServiceException
     */
    @WebMethod
    @WebResult(name = "getUserDetailsReturn", targetNamespace = "http://impl.service.com")
    @RequestWrapper(localName = "getUserDetails", targetNamespace = "http://impl.service.com", className = "com.service.impl.GetUserDetails")
    @ResponseWrapper(localName = "getUserDetailsResponse", targetNamespace = "http://impl.service.com", className = "com.service.impl.GetUserDetailsResponse")
    public UserInfoBO getUserDetails(
        @WebParam(name = "userId", targetNamespace = "http://impl.service.com")
        int userId)
        throws LibraryServiceException
    ;

}
